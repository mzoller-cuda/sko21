{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "adminPassword": {
            "type": "string",
            "defaultValue" : "learncgfatSKO21$$",
            "metadata": {
                "description": "Root password for the Virtual Machine."
            }
        },
         "firewallName": {
            "type": "string",
            "defaultValue" : "sko-CGF-XX",
            "metadata": {
                "description": "name of the firewall"
            }
        },
        "addressPrefix": {
            "type": "string",
            "defaultValue": "10.XX.0.0/16",
            "metadata": {
                "description": "Address prefix for the virtual network"
            }
        },
        "fwSubnetPrefix": {
            "type": "string",
              "defaultValue": "10.XX.10.0/24",
            "metadata": {
                "description": "Address prefix for the virtual network"
            }
        },
        "fwSubnetPrefix2": {
            "type": "string",
            "defaultValue": "10.XX.11.0/24",
            "metadata": {
                "description": "Address prefix for the virtual network"
            }
        },
         "fwSubnetPrefix3": {
            "type": "string",
            "defaultValue" :"10.XX.12.0/24",
            "metadata": {
                "description": "Address prefix for the virtual network"
            }
        },
        "clientSubnetPrefix": {
            "type": "string",
            "defaultValue": "10.XX.0.0/24",
            "metadata": {
                "description": "Address prefix for the virtual network"
            }
        },
        "fwPrivateIP": {
            "type": "string",
            "defaultValue" : "10.XX.10.10",
            "metadata": {
                "description": "Address prefix for the virtual network"
            }
        },
        "fwPrivateIP2": {
            "type": "string",
            "defaultValue" : "10.XX.11.10",
            "metadata": {
                "description": "Address prefix for the virtual network"
            }
        },
        "fwPrivateIP3": {
            "type": "string",
            "defaultValue" : "10.XX.12.10",
            "metadata": {
                "description": "Address prefix for the virtual network"
            }
        },
         "LinuxPrivateIP": {
            "type": "string",
            "defaultValue": "10.XX.0.4",
            "metadata": {
                "description": "Address prefix for the virtual network"
            }
        }
    },
    "variables": {
        "imagePublisher": "barracudanetworks",
        "imageOffer": "barracuda-ng-firewall",

        "location" : "[resourceGroup().location]",
        "adminUsername": "sko21",


        "LinuxName" :"sko-LinuxHost",
        "LinuxVMSize" :"Standard_B2s",
        "ubuntuOSVersion": "18.04-LTS", 
        "LinuxNicName" : "sko-LinuxNic",


        "CGFvmSize" : "Standard_DS3_v2",
        "storageAccountName": "[concat('skodiag', uniquestring(resourceGroup().id))]",
        "storageAccountSkuName": "Standard_LRS",
        "storageAccountSkuType": "Premium",
        "storageAccountKind": "Storage",
       
        "fwNicName": "sko-FwNic1",
        "fwNicName2": "sko-FwNic2",
        "fwNicName3": "sko-FwNic3",
        

        "virtualNetworkName": "sko-VNET",
        "fwSubnetName": "FWSubnetMGMT",
        "fwSubnetName2": "FWSubnet2",
        "fwSubnetName3": "FWSubnet3",
        "clientSubnetName": "ClientSubnet",
        
        "publicIPAddressName": "sko-myPublicIP1",
        "publicIPAddressName2": "sko-myPublicIP2",
        "publicIPAddressName3": "sko-myPublicIP3",
        "publicIPAddressType": "Static",

        "AVsetname": "sko-cgfAVset",

        "routeTableName": "sko-routeTable",
        "defaultRouteName": "defaultRoute",
        
        "customData": "[concat('#!/bin/bash\n\n','cloud-enable-rest\n\n','cloud-enable-ssh\n\n')]",
        "LinuxcustomData": "[concat('#!/bin/bash\n\n','DEBIAN_FRONTEND=noninteractive\n\n','apt-get update\n','apt-get install -y iperf\n\n', 'iperf -s -D')]"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('storageAccountName')]",
            "apiVersion": "2017-06-01",
            "location": "[variables('location')]",
            "sku": {
                "name": "[variables('storageAccountSkuName')]",
                "tier": "[variables('storageAccountSkuType')]"
            },
            "kind": "[variables('storageAccountKind')]",
            "properties": {}
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName')]",
            "apiVersion": "2017-06-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName2')]",
            "apiVersion": "2017-06-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
                {
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[variables('publicIPAddressName3')]",
            "apiVersion": "2017-06-01",
            "location": "[variables('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]"
            }
        },
        {
            "apiVersion": "2018-10-01",
            "type": "Microsoft.Compute/availabilitySets",
            "name": "[variables('AVsetname')]",
            "location": "[resourceGroup().location]",
            "dependsOn": [],
            "properties": {
                "platformFaultDomainCount": 2,
                "platformUpdateDomainCount": 5
            },
            "sku": {
                "name": "Aligned"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "dependsOn" : [
                    "[concat('Microsoft.Network/routeTables/', variables('routeTableName'))]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('fwSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('fwSubnetPrefix')]"
                        }
                    },
                    {
                        "name": "[variables('fwSubnetName2')]",
                        "properties": {
                            "addressPrefix": "[parameters('fwSubnetPrefix2')]"
                        }
                    },
                    {
                        "name": "[variables('fwSubnetName3')]",
                        "properties": {
                            "addressPrefix": "[parameters('fwSubnetPrefix3')]"
                        }
                    },
                    {
                        "name": "[variables('clientSubnetName')]",
                        "properties": {
                            "addressPrefix": "[parameters('clientSubnetPrefix')]",
                            "routeTable" : {
                                 "id": "[resourceId('Microsoft.Network/routeTables', variables('routeTableName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('fwNicName')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "primary": true,
                "enableAcceleratedNetworking": false,
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('fwPrivateIP')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName')),'/subnets/',variables('fwSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('fwNicName2')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName2'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "primary": false,
                "enableAcceleratedNetworking": false,
                "ipConfigurations": [
                    {
                        "name": "ipconfig2",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('fwPrivateIP2')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName2'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName')),'/subnets/',variables('fwSubnetName2'))]"
                            }
                        }
                    }
                ]
            }
        },
         {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('fwNicName3')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName2'))]",
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "primary": false,
                "enableAcceleratedNetworking": false,
                "ipConfigurations": [
                    {
                        "name": "ipconfig3",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('fwPrivateIP3')]",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName3'))]"
                            },
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName')),'/subnets/',variables('fwSubnetName3'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[variables('routeTableName')]",
            "type": "Microsoft.Network/routeTables",
            "apiVersion": "2018-08-01",
            "location": "[variables('location')]",
            "tags": {},
            "properties": {
                "routes": [
                    {
                        "id": "[variables('defaultRouteName')]",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "VirtualAppliance",
                            "nextHopIpAddress": "[parameters('fwPrivateIP')]"
                        },
                        "name": "[variables('defaultRouteName')]"
                    }
                ],
                "disableBgpRoutePropagation": false
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('firewallName')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('fwNicName'))]",
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('fwNicName2'))]",
                 "[resourceId('Microsoft.Network/networkInterfaces/', variables('fwNicName3'))]",
                "[resourceId('Microsoft.Compute/availabilitySets/', variables('AVsetname'))]"
            ],
             "plan": {
             "name": "byol",
             "Product": "[variables('imageOffer')]",
             "Publisher": "[variables('imagePublisher')]"
        },
            "properties": {
                "availabilitySet": {
                    "id": "[resourceId('Microsoft.Compute/availabilitySets',variables('AVsetname'))]"
                },
                "hardwareProfile": {
                    "vmSize": "[variables('CGFvmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('firewallName')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "customData": "[base64(variables('customData'))]"
                },
                 "storageProfile": {
                    "imageReference": {
                    "publisher": "[variables('imagePublisher')]",
                    "offer": "[variables('imageOffer')]",
                    "sku": "byol",
                    "version": "latest"
                    },
                    "osDisk": {
                    "name": "[concat(parameters('firewallName'),'-osdisk')]",
                    "caching": "ReadWrite",
                    "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fwNicName'))]",
                             "properties": {
                                "primary": true
                                }
                        },
                         {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fwNicName2'))]",
                              "properties": {
                                    "primary": false
                                }
                        },
                          {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('fwNicName3'))]",
                              "properties": {
                                    "primary": false
                                }
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), '2016-01-01').primaryEndpoints.blob)]"
                    }
                }
            }
        },

  {
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('LinuxNicName')]",
            "apiVersion": "2018-10-01",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "primary": true,
                "enableAcceleratedNetworking": false,
                "ipConfigurations": [
                    {
                        "name": "LinuxNIC",
                        "properties": {
                            "privateIPAllocationMethod": "Static",
                            "privateIPAddress": "[parameters('LinuxPrivateIP')]",
                            "subnet": {
                                "id": "[concat(resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName')),'/subnets/',variables('clientSubnetName'))]"
                            }
                        }
                    }
                ]
            }
        },


        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2019-03-01",
            "name": "[variables('LinuxName')]",
            "location": "[variables('location')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/networkInterfaces/', variables('LinuxNicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('LinuxVMSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[variables('storageAccountSkuName')]"
                        }
                    },
                    "imageReference": {
                        "publisher": "Canonical",
                        "offer": "UbuntuServer",
                        "sku": "[variables('ubuntuOSVersion')]",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('LinuxNicName'))]"
                        }
                    ]
                },
                "osProfile": {
                    "computerName": "[variables('LinuxName')]",
                    "adminUsername": "[variables('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]",
                    "linuxConfiguration": {
                         "disablePasswordAuthentication": false

                    },
                    "customData": "[base64(variables('LinuxcustomData'))]"
                }
            }
        }
    ],
    "outputs": {}
}